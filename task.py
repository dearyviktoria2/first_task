"""
Задание №1:
    Напишите функцию, которая из исходной строки из букв получает две строки - 1 с заглавными, 2 с строчными буквами
"""

def task_one(incoming_str):

    upper_list = []
    lower_list = []
    for letter in incoming_str:
        if str.isupper(letter):
            upper_list.append(letter)
        else:
            lower_list.append(letter)
    print(f"Заглавные: {upper_list}. Прописные: {lower_list}.")

"""
Задание №2:
    Напишите функцию, у которой будет список (строк длиной в 1 символ) как аргумент. Этот список нужно преобразовать. Разбейте на два списка (только с буквами и только с цифрами).
    Cписки выведите на экран.

"""

def task_two(incoming_list):
    letters = []
    digits = []
    for i in incoming_list:
        if i.isdigit():
            digits.append(i)
        else:
            letters.append(i)
    print(f"Буквы: {letters}")
    print(f"Цифры: {digits}")

task_one("AJSDKAjdanmakdnasndNZasdjsakd")
task_two(["l", "0", "M", "8", "R", "5"])

"""
Массив в Python организован через список (list), который работает как классический массив, и как стек с любым порядком (FIFO / LIFO / FILO / LILO) за счет большого количества встроенных функций.

list = [] - инициализация пустого списка
list = [1, "a", True] - элементом списка может быть любой тип данных
Добавить элемент в список можно на любое место.
Удалить из списка элемент можно как по индексу, так и по значению.
list.append("a") - добавит новый элемент "a" в конец списка
list.insert(x, "a") - добавит элемент "a" на место с индексом x
list.pop(x) - удалит из списка элемент на индексе x и вернет его в качестве результата
list.remove(x) - удалит из списка элемент СО ЗНАЧЕНИЕМ равным x (если таких элементов несколько - удалит первый попавшийся)

Также во встроенной библиотеке collections есть структура данных deque, 
которая реализует структуру данных похожую на список, но с оптимизацией доступа к элементам.
howto:
from collections import deque

x = deque() - инициализация списка
x.append() - добавить элемент в конец списка
x.appendleft() - добавить элемент в начало списка
x.clear() - очистить список
x.pop() - удалить и вернуть последний элемент списка
x.popleft() - удалить и вернуть первый элемент списка
а так же есть функции remove и insert аналогичные таковым у списков
"""


